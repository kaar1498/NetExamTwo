// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetExamTwo.Data;

namespace NetExamTwo.Migrations
{
    [DbContext(typeof(NetExamTwoContext))]
    [Migration("20210820082340_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("NetExamTwo.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("NetExamTwo.Models.ContactPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ContactPerson");
                });

            modelBuilder.Entity("NetExamTwo.Models.Container", b =>
                {
                    b.Property<int>("CCTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BottomFrame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pipe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shelf")
                        .HasColumnType("INTEGER");

                    b.HasKey("CCTag");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("NetExamTwo.Models.ContainerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContainerCCTag")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContainerCCTag");

                    b.ToTable("ContainerStatus");
                });

            modelBuilder.Entity("NetExamTwo.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CVR")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("NetExamTwo.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneCountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("NetExamTwo.Models.ContactInfo", b =>
                {
                    b.HasOne("NetExamTwo.Models.Phone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneId");

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("NetExamTwo.Models.ContactPerson", b =>
                {
                    b.HasOne("NetExamTwo.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("NetExamTwo.Models.Customer", null)
                        .WithMany("ContactList")
                        .HasForeignKey("CustomerId");

                    b.Navigation("ContactInfo");
                });

            modelBuilder.Entity("NetExamTwo.Models.ContainerStatus", b =>
                {
                    b.HasOne("NetExamTwo.Models.Container", null)
                        .WithMany("StatusHistory")
                        .HasForeignKey("ContainerCCTag");
                });

            modelBuilder.Entity("NetExamTwo.Models.Customer", b =>
                {
                    b.HasOne("NetExamTwo.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.Navigation("ContactInfo");
                });

            modelBuilder.Entity("NetExamTwo.Models.Container", b =>
                {
                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("NetExamTwo.Models.Customer", b =>
                {
                    b.Navigation("ContactList");
                });
#pragma warning restore 612, 618
        }
    }
}
